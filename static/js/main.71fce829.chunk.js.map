{"version":3,"sources":["redux.js","components/Home.js","components/Map.js","components/InfoPane.js","components/Details.js","components/App.js","serviceWorker.js","index.js"],"names":["setBag","bag","type","payload","reducers","combineReducers","pokemonList","state","arguments","length","undefined","action","store","initialState","createStore","configureStore","fetchPokemonList","fetch","then","response","json","results","map","value","idx","id","Home","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getFilteredPokemon","filteredPokemon","search","filter","element","name","includes","showBagOnly","slice","numCardsLoaded","getCards","react_default","a","createElement","className","key","react_router_dom","to","alt","src","pokemon","list","setPokemonList","inherits","createClass","_this2","style","marginTop","onClick","setState","onChange","event","target","placeholder","react_infinite_scroller_default","pageStart","loadMore","hasMore","loader","React","Component","mapDispatchToProps","connect","locations","getLocations","Promise","resolve","formatLocations","coordinates","split","lat","parseFloat","lng","Marker","_ref","sprites","front_default","width","Map","positionMap","api","bounds","maps","LatLngBounds","i","extend","LatLng","fitBounds","height","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","yesIWantToUseGoogleMapApiInternals","onGoogleApiLoaded","Map_Marker","setCookie","cookie","JSON","stringify","document","Info","toggleBag","newBag","assign","weight","checked","types","stats","stat","base_stat","getPokemon","fetchPokemon","Details","getInfoPane","InfoPane","getContentPane","components_Map","abilities","ability","match","params","persistedBag","result","RegExp","parse","readCookie","App","basename","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71fce829.chunk.js","sourcesContent":["import { combineReducers, createStore } from 'redux';\r\n\r\n// actions.js\r\nexport const setPokemonList = list => ({\r\n  type: 'SET_POKEMON_LIST',\r\n  payload: list\r\n})\r\n\r\nexport const setBag = bag => ({\r\n  type: 'SET_BAG',\r\n  payload: bag\r\n})\r\n\r\nexport const pokemonList = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'SET_POKEMON_LIST':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const bag = (state = null, action) => {\r\n  switch(action.type) {\r\n    case 'SET_BAG':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// TODO: add a 'detailedList' to store detailed pokemon info\r\n// TODO: add a 'locationsList' to store pokemon locations\r\n\r\nexport const reducers = combineReducers({\r\n  pokemonList,\r\n  bag\r\n});\r\n\r\n// store.js\r\nexport function configureStore(initialState = {}) {\r\n  const store = createStore(reducers, initialState);\r\n  return store;\r\n}\r\n\r\nexport const store = configureStore();\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setPokemonList } from '../redux';\n\nimport InfiniteScroll from 'react-infinite-scroller';\n\n// TODO: lazy load certain amount, and fetch more on infinite scroll trigger\n// the more scalable solution\nlet fetchPokemonList = () => {\n  return fetch('https://pokeapi.co/api/v2/pokemon/?limit=151').then(response => {\n    return response.json()\n  }).then(json => {\n    return json.results.map((value, idx) => {\n      value.id = idx+1;\n      return value\n    })\n  })\n}\n\nexport class Home extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      pokemon: [],\n      search: '',\n      showBagOnly: false,\n      numCardsLoaded: 20\n    };\n\n    // fetch pokemonList if we haven't before\n    if(props.pokemonList.length === 0) {\n      fetchPokemonList().then(list => {\n        props.setPokemonList(list);\n      });\n    }\n  }\n  getFilteredPokemon = () => {\n    let filteredPokemon = this.props.pokemonList\n    // filter by search box\n    if(this.state.search) {\n      filteredPokemon = filteredPokemon.filter(element => {\n        return element.name.includes(this.state.search);\n      })\n    }\n    // show all / bag\n    if(this.state.showBagOnly) {\n      filteredPokemon = filteredPokemon.filter(element => {\n        return this.props.bag[element.id];\n      })\n    }\n    return filteredPokemon.slice(0, this.state.numCardsLoaded);\n  }\n  getCards = () => {\n    // TODO: display when loading and when bag is empty\n    return this.getFilteredPokemon().map((element) => {\n      return (\n        <div className=\"card-container text-center\" key={element.id}>\n          <Link className=\"card\" to={\"/pokemon/\" + element.name}>\n            <img className=\"card-img\" alt={element.name} src={\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\" + element.id + \".png\"} />\n          </Link>\n          <div className=\"card-label\">{element.name}</div>\n        </div>\n      );\n    })\n  }\n  render() {\n    return (\n      <div className=\"Home container\" style={{marginTop: \"10em\"}}>\n        <div className=\"list-toggle text-center\">\n          <div className=\"btn-group\">\n            <button className={\"btn all-btn \" + (this.state.showBagOnly ? \"\" : \"active\")} onClick={() => this.setState({showBagOnly: false, numCardsLoaded: 20})}>All</button>\n            <button className={\"btn bag-btn \" + (this.state.showBagOnly ? \"active\" : \"\")} onClick={() => this.setState({showBagOnly: true, numCardsLoaded: 20})}>Bag</button>\n          </div>\n        </div>\n        <div className=\"search-input-container text-center\">\n          <input type=\"text\"\n            value={this.state.search}\n            onChange={(event) => this.setState({search: event.target.value, numCardsLoaded: 20})}\n            placeholder={\"Search\"} />\n        </div>\n        <InfiniteScroll\n          pageStart={0}\n          loadMore={() => this.setState({numCardsLoaded: this.state.numCardsLoaded + 20})}\n          hasMore={this.state.numCardsLoaded < this.props.pokemonList.length}\n          loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        >\n        <div className=\"card-deck\">\n          {this.getCards()}\n        </div>\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nlet mapDispatchToProps = {\n  setPokemonList\n};\nlet mapStateToProps = (state) => {\n  return {\n    pokemonList: state.pokemonList,\n    bag: state.bag\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\n\n// dummy data\nconst locations = [\n  \"32.734778,-117.152630\",\n  \"32.734196,-117.139709\",\n  \"32.833744,-117.067149\",\n  \"32.819219,-117.029244\",\n  \"32.907707,-116.797917\"\n];\n\nconst fetchLocations = (id) => {\n  return Promise.resolve(locations);\n  // browser does auto preflight because of custom header\n  // api isn't supporting OPTIONS\n  // return fetch('https://api.craft-demo.net/pokemon/' + id, {\n  //   headers: {\n  //     'x-api-key': 'HHko9Fuxf293b3w56zAJ89s3IcO9D5enaEPIg86l'\n  //   }\n  // }).then(response => {\n  //   return response.json();\n  // })\n}\n\nconst getLocations = (id) => {\n  // TODO: if not in store, then fetch and dispatch\n  return fetchLocations(id).then(locations => {\n    return formatLocations(locations);\n  });\n}\n\nconst formatLocations = (locations) => {\n  return locations.map(element => {\n    let coordinates = element.split(',');\n    return {\n      lat: parseFloat(coordinates[0]),\n      lng: parseFloat(coordinates[1])\n    }\n  })\n}\n\n// map pin component\nconst Marker = ({ pokemon }) => {\n  return (\n    <img src={pokemon.sprites.front_default} width={50} alt={pokemon.name}/>\n  );\n}\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      locations: null\n    }\n    getLocations(props.pokemon.id).then(locations => {\n      this.setState({locations: locations})\n    })\n  }\n  positionMap = (api) => {\n    const bounds = new api.maps.LatLngBounds();\n    for(let i in this.state.locations) {\n      bounds.extend(new api.maps.LatLng(\n        this.state.locations[i].lat,\n        this.state.locations[i].lng\n      ));\n    }\n    api.map.fitBounds(bounds)\n  }\n  render() {\n    if(this.state.locations) {\n      return (\n        <div className=\"Map\">\n          <div style={{ height: '30em', width: '100%' }}>\n            <GoogleMapReact\n              bootstrapURLKeys={{ key: 'AIzaSyAEJ3rGsi9pShMUPjS9_CNALgEX5l_l3iA' }}\n              defaultCenter={{lat: 32.7157, lng: -117.1611}} // default San Diego\n              defaultZoom={11}\n              yesIWantToUseGoogleMapApiInternals={true}\n              onGoogleApiLoaded={(maps, map) => this.positionMap(maps, map)}\n            >\n              {this.state.locations.map((element, idx) => {\n                return <Marker lat={element.lat} lng={element.lng} key={idx} pokemon={this.props.pokemon}></Marker>\n              })}\n            </GoogleMapReact>\n          </div>\n        </div>\n      );\n    } else return <div></div>;\n  }\n}\n\nexport default Map;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setBag } from '../redux';\n\nconst setCookie = (name, value) => {\n  let cookie = name + '=' + JSON.stringify(value);\n  document.cookie = cookie;\n}\n\nclass Info extends React.Component {\n  toggleBag = () => {\n    let id = this.props.pokemon.id;\n    let newBag = Object.assign({}, this.props.bag);\n    if(newBag[id]) {\n      delete newBag[id];\n    } else {\n      newBag[id] = true;\n    }\n    setCookie('bag', newBag);\n    this.props.setBag(newBag);\n  }\n  render() {\n    return (\n      <div className=\"Info\">\n        <div className=\"info-img-container\">\n          <div className=\"info-img-box\">\n            <img className=\"info-img\" src={this.props.pokemon.sprites.front_default} alt={this.props.pokemon.name}/>\n          </div>\n          <div className=\"card-label text-center\">{this.props.pokemon.name}</div>\n        </div>\n        <p>Height: {this.props.pokemon.height}</p>\n        <p>Weight: {this.props.pokemon.weight}</p>\n        <p>In bag: <input\n            name=\"inBag\"\n            type=\"checkbox\"\n            checked={this.props.bag[this.props.pokemon.id]}\n            onChange={this.toggleBag} />\n        </p>\n        <p>\n          {this.props.pokemon.types.map((type, idx) => {\n            return <span className=\"label\" key={idx}>{type.type.name}</span>\n          })}\n        </p>\n        <p>\n        Bacon ipsum dolor amet alcatra brisket chuck jerky bresaola. Capicola ball tip landjaeger pig burgdoggen. Kielbasa short loin kevin salami landjaeger leberkas cow. Meatball jowl ball tip brisket shankle porchetta, filet mignon rump.\n        </p>\n        <div>\n          <ul>\n          {this.props.pokemon.stats.map((stat, idx) => {\n            return <li key={idx}>{stat.stat.name}: {stat.base_stat}</li>\n          })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    bag: state.bag\n  };\n}\n\nlet mapDispatchToProps = {\n  setBag\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Info);\n","import React from 'react';\nimport Map from './Map';\nimport Info from './InfoPane';\n\n// retrieves pokemon from the API\nlet fetchPokemon = (name) => {\n  return fetch('https://pokeapi.co/api/v2/pokemon/' + name).then(response => {\n    return response.json();\n  })\n}\n\n// retrieves pokemon from the store\nlet getPokemon = (name) => {\n  // TODO: check store, and if not in store then fetch and dispatch\n  return fetchPokemon(name);\n}\n\nclass Details extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: null,\n      locations: null\n    }\n    getPokemon(props.match.params.name).then((pokemon) => {\n      this.setState({pokemon: pokemon})\n    })\n  }\n  getInfoPane = () => {\n    if(this.state.pokemon) {\n      return <Info pokemon={this.state.pokemon}></Info>\n    }\n  }\n  getContentPane = () => {\n    if(this.state.pokemon) {\n      return (\n        <div>\n          <Map pokemon={this.state.pokemon}></Map>\n          <div style={{marginTop: '2em'}}>\n            Abilities:\n            {this.state.pokemon.abilities.map((value, idx) => {\n              return <div key={idx}>{value.ability.name}</div>\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n  render() {\n    return (\n      <div className=\"Details\" style={{marginTop: \"10em\"}}>\n        <div className=\"container\">\n          <div className=\"details-container\">\n          <div className=\"info-pane\">\n            {this.getInfoPane()}\n          </div>\n          <div className=\"content-pane\">\n            {this.getContentPane()}\n          </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Details;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { setBag } from '../redux';\n\nimport Home from './Home'\nimport Details from './Details'\n\nconst readCookie = (name) => {\n  let result = document.cookie.match(new RegExp(name + '=([^;]+)'));\n  result && (result = JSON.parse(result[1]));\n  return result;\n}\n\nconst persistedBag = readCookie('bag');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    props.setBag(persistedBag ? persistedBag : {});\n  }\n  render() {\n    return (\n        <Router\n        basename=\"/pokedex\"\n        >\n          <div className=\"App\">\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/pokemon/:name\" component={Details} />\n          </div>\n        </Router>\n    );\n  }\n}\n\nlet mapDispatchToProps = {\n  setBag\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { store } from './redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}